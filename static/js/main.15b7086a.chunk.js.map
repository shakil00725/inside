{"version":3,"sources":["components/Header/Header.jsx","components/Category/Category.jsx","containers/Home.js","components/ListData/Listdata.jsx","containers/Results.js","components/DetailsPage/Details.jsx","containers/Details.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","list","width","fullList","wrapper","background","height","display","flexDirection","justifyContent","alignItems","input","marginLeft","spacing","borderRadius","margin","boxShadow","inputField","paddingLeft","fontSize","iconButton","padding","Header","singlePage","handleSearchWord","searchButtonClicked","value","classes","React","useState","left","state","setState","toggleDrawer","anchor","open","event","className","clsx","role","onClick","onKeyDown","List","ListItem","button","key","push","to","ListItemIcon","ListItemText","primary","single","values","Fragment","AppBar","color","position","Toolbar","IconButton","edge","aria-label","Drawer","onClose","Paper","square","elevation","Typography","variant","component","style","marginTop","InputBase","onChange","inputProps","placeholder","Article","root","Category","map","article","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","heading","ExpansionPanelDetails","Home","keywords","redirect","target","length","this","pathname","Component","ListData","results","detailsPageClicked","result","name","ListItemAvatar","Avatar","Divider","ResultsData","searchResults","isLoading","detailsPage","getTheSearchResults","props","location","Key","axios","get","Results","data","console","log","Details","align","App","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.15b7086a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Paper from '@material-ui/core/Paper';\nimport { InputBase } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  wrapper: {\n    background: '#f7f7f7',\n    height: '300px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    background: 'white',\n    height: '50px',\n    width: '50%',\n    borderRadius: '5px',\n    margin:'5px',\n    boxShadow: '1px .5px 4px '\n  },\n  inputField: {\n    paddingLeft: theme.spacing(2),\n    fontSize: '1rem',\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n    marginLeft: theme.spacing(0.5),\n  },\n}));\n\nconst Header = ({ singlePage, handleSearchWord, searchButtonClicked,value }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    setState({ [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button key={\"Home\"} onClick={()=><Redirect push to='/articles' />}>\n          <ListItemIcon><MailIcon /></ListItemIcon>\n          <ListItemText primary={\"Home\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  const single = singlePage;\n  const values = value;\n  return (\n    <div>\n      {single ?\n        <React.Fragment>\n          <AppBar color='inherit' position=\"static\">\n            <Toolbar>\n              <React.Fragment>\n                <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\" >\n                  <MenuIcon />\n                </IconButton>\n                <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n                  {list('left')}\n                </Drawer>\n              </React.Fragment>\n            </Toolbar>\n          </AppBar>\n          {/* Search Page */}\n          <Paper className={classes.wrapper} square={true} elevation={0}>\n            <Typography color='primary' variant=\"h4\" component=\"h2\">\n              How can we help you?\n                         </Typography>\n            <div style={{ width: '100%', marginTop: '20px' }}>\n              <InputBase\n                onChange={handleSearchWord}\n                className={classes.input}\n                inputProps={{ 'aria-label': 'id no.', className: classes.inputField }}\n                placeholder=\"Search\" />\n              <IconButton className={classes.iconButton} aria-label=\"search\" onClick={searchButtonClicked}>\n                <SearchIcon />\n              </IconButton>\n            </div>\n          </Paper>\n        </React.Fragment>\n        : \n        <React.Fragment>\n          <AppBar color='inherit' position=\"static\">\n            <Toolbar>\n              <React.Fragment>\n                <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\" >\n                  <MenuIcon />\n                </IconButton>\n                <div style={{ width: '100%' }}>\n                  <InputBase\n                    value={values}\n                    onChange={handleSearchWord}\n                    className={classes.input}\n                    inputProps={{ 'aria-label': 'id no.', className: classes.inputField }}\n                    placeholder=\"Search\" />\n                  <IconButton className={classes.iconButton} aria-label=\"search\" onClick={searchButtonClicked}>\n                    <SearchIcon />\n                  </IconButton>\n                </div>\n                <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n                  {list('left')}\n                </Drawer>\n              </React.Fragment>\n            </Toolbar>\n          </AppBar>\n        </React.Fragment>}\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst Article = [1, 2, 3, 4];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '50px',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    wrapper: {\n        width: '50%',\n    },\n\n}));\n\nconst Category = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                {\n                    Article.map(article => {\n                        return (\n                            <div key={article}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon color='primary' />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                <Typography className={classes.heading}>Expansion Panel 1</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                <Typography>\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                        sit amet blandit leo lobortis eget.\n                                </Typography>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Category;","import React from 'react';\nimport Header from '../components/Header/Header';\nimport Category from '../components/Category/Category';\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Home extends React.Component {\n    state = {\n        keywords: '',\n        redirect:false,\n    }\n\n    handleSearchWord = (event) => {\n        const value = event.target.value;\n        this.setState({ keywords: value })\n    }\n\n    searchButtonClicked = () => {\n        const { keywords } = this.state;\n        if (keywords.length > 0) {\n            this.setState({ redirect: true})\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect push to={{pathname: '/inside/articles', state: {keywords:this.state.keywords}}}/>;\n        }\n\n        return(\n            <div>\n                <Header \n                    singlePage={true}\n                    handleSearchWord={this.handleSearchWord} \n                    searchButtonClicked={this.searchButtonClicked} \n                />\n                <Category />\n            </div>\n        )}\n}","import React from 'react';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: 'flex',\n        width: '50%',\n        // background:'red',\n        flexDirection: 'column',\n        margin: '10px auto 10px auto'\n    },\n}));\n\n\nconst ListData = ({ results, detailsPageClicked }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper} >\n            <List>\n                {results.map(result => {\n                    return (\n                        <div key={result.name} onClick={()=>detailsPageClicked(100)}>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DescriptionIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText>Title of the article</ListItemText>\n                            </ListItem>\n                            <Divider variant=\"inset\" component=\"li\" /> \n                        </div>\n                        )\n                })}\n            </List>\n        </div>\n    )\n}\n\nexport default ListData;","import React from 'react';\nimport Header from '../components/Header/Header';\nimport ListData from '../components/ListData/Listdata';\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class ResultsData extends React.Component {\n    state = {\n        keywords: '',\n        searchResults: [],\n        isLoading:false,\n        detailsPage: false,\n    }\n\n    handleSearchWord = (event) => {\n        const value = event.target.value;\n        this.setState({ keywords: value })\n    }\n\n    searchButtonClicked = () => {\n        const { keywords } = this.state;\n        if (keywords.length > 0) {\n            this.getTheSearchResults(keywords)\n        }\n    }\n\n    componentDidMount(){\n        const { keywords } = this.props.location.state;\n        this.getTheSearchResults(keywords)\n        this.setState({keywords:keywords})\n    }\n\n    detailsPageClicked = (id) => {\n        this.setState({detailsPage:true})\n    }\n\n    render() {\n        if (this.state.detailsPage) {\n            return <Redirect push to={{pathname: '/inside/details',state: {keywords:this.state.keywords}}}/>;\n        }\n\n        return (\n                <div>\n                    <Header\n                        singlePage={false}\n                        handleSearchWord={this.handleSearchWord}\n                        searchButtonClicked={this.searchButtonClicked}\n                        value={this.state.keywords}\n                    />\n                    <ListData results={this.state.searchResults} detailsPageClicked={this.detailsPageClicked}/>\n                </div> \n        )\n    }\n\n    async getTheSearchResults(Key) {\n        try {\n            const Results = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n            const data = await Results.data;\n            this.setState({ searchResults: data })\n            console.log(\"Result page\",Key)\n            console.log(this.state.searchResults)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        width: '60%',\n        margin: '10px auto'\n    }\n}));\n\nconst Details = () => {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.wrapper} variant=\"outlined\" square >\n            <Typography style={{ margin: '10px' }} align=\"left\" variant=\"h2\" component=\"h2\">\n                h1. Heading\n            </Typography>\n            <Divider variant=\"fullWidth\" component=\"li\" />\n            <Typography style={{ margin: '10px' }} align=\"left\" variant=\"body2\" component=\"h2\">\n                We're kicking off a new video series focusing on core Optimize features, specifically on how to create a test in less than five minutes.\n\n                Our first video – How to create a new experiment in Optimize– explains how to create a new A/B test in three steps. First we show you how to create a variant using the Optimize visual editor. Then we target website visitors from a specific city, and finally we use one of the built-in Google Analytics goals as an objective and start our test.\n\n                Learn more about how to create an A/B test and the different experiment types (like redirect and MVT) supported by Optimize.\n\n                – Happy Optimizing!\n                We're kicking off a new video series focusing on core Optimize features, specifically on how to create a test in less than five minutes. Our first video – How to create a new experiment in Optimize– explains how to create a new A/B test in three steps. First we show you how to create a variant using the Optimize visual editor. Then we target website visitors from a specific city, and finally we use one of the built-in Google Analytics goals as an objective and start our test. Learn more about how to create an A/B test and the different experiment types (like redirect and MVT) supported by Optimize. – Happy Optimizing!\n            </Typography>\n        </Paper>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport Header from '../components/Header/Header';\nimport { Redirect } from \"react-router-dom\";\nimport DetailsPage from '../components/DetailsPage/Details';\n\nexport default class Details extends React.Component {\n    state = {\n        keywords: '',\n        redirect:false\n    }\n\n    handleSearchWord = (event) => {\n        const value = event.target.value;\n        this.setState({ keywords: value })\n    }\n\n    searchButtonClicked = () => {\n        const { keywords } = this.state;\n        if (keywords.length > 0) {\n            console.log(\"details\",keywords);\n            this.setState({keywords: keywords ,redirect: true})\n        }\n    }\n\n    render(){\n        if (this.state.redirect) {\n            return <Redirect push to={{pathname: '/inside/articles',state: {keywords:this.state.keywords}}}/>;\n        }\n\n        return(\n            <div>\n            <Header\n                singlePage={false}\n                handleSearchWord={this.handleSearchWord}\n                searchButtonClicked={this.searchButtonClicked}\n                value={this.state.keywords}\n            />\n            <DetailsPage />\n        </div> \n        )}\n}","import React from 'react';\nimport './App.css';\nimport Home from './containers/Home';\nimport ResultsData from './containers/Results';\nimport Details from './containers/Details';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/inside/\" exact component={Home}/>\n          <Route path=\"/inside/articles\" component={ResultsData}/>\n          <Route path=\"/inside/details\" component={Details}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}