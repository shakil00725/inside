{"version":3,"sources":["components/Header/Header.jsx","components/Category/Category.jsx","containers/Home.js","components/ListData/Listdata.jsx","containers/Results.js","components/DetailsPage/Details.jsx","containers/Details.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","list","width","fullList","wrapper","background","height","display","flexDirection","justifyContent","alignItems","input","marginLeft","spacing","margin","borderRadius","paddingLeft","boxShadow","inputField","fontSize","iconButton","padding","leftIcon","right","top","zIndex","rightIcon","left","Header","handleKeyPress","homeButton","singlePage","handleSearchWord","searchButtonClicked","value","classes","React","useState","state","setState","toggleDrawer","anchor","open","event","className","clsx","role","onClick","onKeyDown","List","ListItem","button","key","ListItemIcon","ListItemText","primary","single","values","Fragment","AppBar","color","position","Toolbar","IconButton","edge","aria-label","Drawer","onClose","Paper","square","elevation","Typography","variant","component","style","marginTop","InputBase","onKeyPress","onChange","inputProps","placeholder","disabled","Article","root","Category","map","article","ExpansionPanel","marginBottom","border","ExpansionPanelSummary","expandIcon","aria-controls","id","heading","ExpansionPanelDetails","Home","keywords","redirect","target","length","console","log","props","history","push","this","to","pathname","Component","ListData","results","detailsPageClicked","answers","align","result","index","ListItemAvatar","Avatar","secondary","substring","Divider","ResultsData","searchResults","isLoading","detailsPage","questionList","answerList","selectedAnswer","selectedQuestion","getResults","question","answer","location","Skeleton","Key","axios","post","Results","Data","data","Answers","Questions","query","Details","App","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89325f4e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Paper from '@material-ui/core/Paper';\nimport { InputBase } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  wrapper: {\n    background: '#f7f7f7',\n    height: '300px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: theme.spacing(5),\n    background: 'white',\n    height: '50px',\n    width: '40%',\n    margin:'10px',\n    borderRadius: '7px',\n    paddingLeft:'50px',\n    boxShadow: '1px .5px 4px '\n  },\n  inputField: {\n    paddingLeft: theme.spacing(2),\n    fontSize: '.9rem',\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n    marginLeft: theme.spacing(0.5),\n  },\n\n  leftIcon:{\n      width:'20px',\n      display:'relative',\n      right:'-90px',\n      top:'1px',\n      zIndex:'1'\n  },\n  rightIcon:{\n    width:'20px',\n    display:'relative',\n    left:'-50px',\n    top:'1px',\n    zIndex:'2'\n}\n}));\n\nconst Header = ({handleKeyPress, homeButton,singlePage, handleSearchWord, searchButtonClicked,value }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    setState({ [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem button key={\"Home\"} onClick={homeButton}>\n          <ListItemIcon><MailIcon /></ListItemIcon>\n          <ListItemText primary={\"Home\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  const single = singlePage;\n  const values = value;\n  return (\n    <div>\n      {single ?\n        <React.Fragment>\n          <AppBar color='inherit' position=\"static\">\n            <Toolbar>\n              <React.Fragment>\n                <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\" >\n                  <MenuIcon />\n                </IconButton>\n                <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n                  {list('left')}\n                </Drawer>\n              </React.Fragment>\n            </Toolbar>\n          </AppBar>\n          {/* Search Page */}\n          <Paper className={classes.wrapper} square={true} elevation={0}>\n            <Typography color='primary' variant=\"h5\" component=\"h2\">\n              How can we help you?\n                         </Typography>\n            <div style={{ width: '100%', marginTop: '20px' }}>\n              <IconButton className={classes.leftIcon} aria-label=\"search\" onClick={searchButtonClicked}>\n                    <SearchIcon />\n              </IconButton>\n              <InputBase\n                onKeyPress={handleKeyPress}\n                onChange={handleSearchWord}\n                className={classes.input}\n                inputProps={{ 'aria-label': 'id no.', className: classes.inputField }}\n                placeholder=\"Describe your issue..\" />\n                <IconButton disabled className={classes.rightIcon} aria-label=\"search\" >\n                    {values?<ClearIcon />:''}\n                </IconButton>\n            </div>\n          </Paper>\n        </React.Fragment>\n        : \n        <React.Fragment>\n          <AppBar color='inherit' position=\"static\">\n            <Toolbar>\n              <React.Fragment>\n                <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\" >\n                  <MenuIcon />\n                </IconButton>\n                <div style={{ width: '100%' }}>\n                <IconButton className={classes.leftIcon} aria-label=\"search\" onClick={searchButtonClicked}>\n                    <SearchIcon />\n              </IconButton>\n              <InputBase\n                onKeyPress={handleKeyPress}\n                value={values}\n                onChange={handleSearchWord}\n                className={classes.input}\n                inputProps={{ 'aria-label': 'id no.', className: classes.inputField }}\n                placeholder=\"Describe your issue..\" />\n                <IconButton disabled className={classes.rightIcon} aria-label=\"search\">\n                    {values?<ClearIcon />:''}\n                </IconButton>\n                </div>\n                <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n                  {list('left')}\n                </Drawer>\n              </React.Fragment>\n            </Toolbar>\n          </AppBar>\n        </React.Fragment>}\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst Article = [1, 2, 3, 4];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '50px',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    wrapper: {\n        width: '50%',\n    },\n\n}));\n\nconst Category = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                {\n                    Article.map(article => {\n                        return (\n                            <div key={article}>\n                            <ExpansionPanel style={{ marginBottom:'8px', border:\".5px solid grey\"}}>\n                                <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon color='primary' />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                <Typography className={classes.heading}>Expansion Panel 1</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails style={{ background:' #dbe8f7 '}}>\n                                <Typography>\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                        sit amet blandit leo lobortis eget.\n                                </Typography>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Category;","import React from 'react';\nimport Header from '../components/Header/Header';\nimport Category from '../components/Category/Category';\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Home extends React.Component {\n    state = {\n        keywords: '',\n        redirect:false,\n    }\n\n    handleSearchWord = (event) => {\n        const value = event.target.value;\n        this.setState({ keywords: value })\n    }\n\n    searchButtonClicked = () => {\n        const { keywords } = this.state;\n        if (keywords.length > 0) {\n            this.setState({ redirect: true})\n        }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            const { keywords } = this.state;\n            if (keywords.length > 0) {\n                this.setState({ redirect: true})\n            }\n            console.log(keywords)\n        }\n    }\n\n    homeButton = () => {\n        this.props.history.push('/inside/') \n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect push to={{pathname: '/inside/articles', state: {keywords:this.state.keywords}}}/>;\n        }\n\n        return(\n            <div>\n                <Header\n                    handleKeyPress={this.handleKeyPress}\n                    value={this.state.keywords}\n                    homeButton={this.homeButton} \n                    singlePage={true}\n                    handleSearchWord={this.handleSearchWord} \n                    searchButtonClicked={this.searchButtonClicked} \n                />\n                <Category />\n            </div>\n        )}\n}","import React from 'react';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: 'flex',\n        width: '50%',\n        // background:'red',\n        flexDirection: 'column',\n        margin: '10px auto 10px auto'\n    },\n}));\n\n\nconst ListData = ({keywords, results, detailsPageClicked, answers}) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper} >\n            <Typography style={{ margin: '10px' }} align=\"left\" variant=\"body2\" component=\"h2\">\n                    Search results for \" {keywords} \"\n            </Typography>\n            <List>\n                {results.map((result,index) => {\n                    return (\n                        <div key={index} onClick={()=>detailsPageClicked(results[index],answers[index])}>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <DescriptionIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                {/* <ListItemText>{result}</ListItemText> */}\n                                <ListItemText primary={result} secondary={answers[index].substring(0,150)+'..'} />\n                            </ListItem>\n                            <Divider variant=\"inset\" component=\"li\" /> \n                        </div>\n                        )\n                })}\n            </List>\n        </div>\n    )\n}\n\nexport default ListData;","import React from 'react';\nimport Header from '../components/Header/Header';\nimport ListData from '../components/ListData/Listdata';\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nexport default class ResultsData extends React.Component {\n    state = {\n        keywords: '',\n        searchResults: [],\n        isLoading:false,\n        detailsPage: false,\n        questionList:[],\n        answerList:[],\n        selectedAnswer:'',\n        selectedQuestion:'',\n    }\n\n    handleSearchWord = (event) => {\n        const value = event.target.value;\n        this.setState({ keywords: value , isLoading:false})\n    }\n\n    searchButtonClicked = () => {\n        const { keywords } = this.state;\n        if (keywords.length > 0) {\n            this.getResults(keywords)\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.state.keywords);\n        const { keywords } = this.props.location.state;\n        this.getResults(keywords)\n        this.setState({keywords:keywords})\n    }\n\n    detailsPageClicked = (question,answer) => {\n        this.setState({\n            detailsPage:true,\n            selectedAnswer:answer,\n            selectedQuestion:question,\n        })\n\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            const { keywords } = this.state;\n            if (keywords.length > 0) {\n                this.getResults(keywords)\n            }\n            console.log(keywords)\n        }\n    }\n\n    homeButton = () => {\n        this.props.history.push('/inside/') \n    }\n\n    render() {\n        if (this.state.detailsPage) {\n            return <Redirect \n                        push to={{pathname: '/inside/details',\n                        state: {\n                            question:this.state.selectedQuestion,\n                            answer:this.state.selectedAnswer,\n                        }}}/>;\n        }\n\n        return (\n                <div>\n                    <Header\n                        handleKeyPress={this.handleKeyPress}\n                        homeButton={this.homeButton}\n                        singlePage={false}\n                        handleSearchWord={this.handleSearchWord}\n                        searchButtonClicked={this.searchButtonClicked}\n                        value={this.state.keywords}\n                    />\n                    {this.state.isLoading ? \n                    <ListData keywords={this.state.keywords} results={this.state.questionList} answers={this.state.answerList} detailsPageClicked={this.detailsPageClicked}/>\n                    :<div style={{ width:'50%', margin:'20px auto'}}>\n                     <Skeleton />\n                     <Skeleton />   \n                     <Skeleton />   \n                    </div>}\n                </div> \n        )\n    }\n\n    async getResults(Key) {\n        try {\n            const Results = await axios.post(\"https://insidemapssearch.herokuapp.com/getAll\",{ \"key\": Key});\n            const Data = Results.data;\n            const Answers = Data.answers?Data.answers:[];\n            const Questions = Data.query?Data.query:[];\n            console.log(Results)\n            console.log(Answers)\n            console.log(Questions)\n            this.setState({ questionList: Questions, answerList: Answers, isLoading:true})\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        width: '60%',\n        margin: '10px auto'\n    }\n}));\n\nconst Details = ({question,answer}) => {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.wrapper} variant=\"outlined\"  elevation={3}>\n            <Typography style={{ margin: '10px' }} align=\"left\" variant=\"h6\" component=\"h2\">\n                {question}\n            </Typography>\n            <Divider variant=\"fullWidth\" component=\"nav\" />\n            <Typography style={{ margin: '10px' }} align=\"left\" variant=\"body2\" component=\"h2\">\n                {answer}\n            </Typography>\n        </Paper>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport Header from '../components/Header/Header';\nimport { Redirect } from \"react-router-dom\";\nimport DetailsPage from '../components/DetailsPage/Details';\n\nexport default class Details extends React.Component {\n    state = {\n        keywords: '',\n        redirect:false,\n        answer:'',\n        question:'',\n    }\n\n    handleSearchWord = (event) => {\n        const value = event.target.value;\n        this.setState({ keywords: value })\n    }\n\n    searchButtonClicked = () => {\n        const { keywords } = this.state;\n        if (keywords.length > 0) {\n            console.log(\"details\",keywords);\n            this.setState({keywords: keywords ,redirect: true})\n        }\n    }\n\n    componentDidMount(){\n        const { question, answer } = this.props.location.state;\n        this.setState({\n            question:question,\n            answer:answer\n        })\n       \n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            const { keywords } = this.state;\n            if (keywords.length > 0) {\n                console.log(\"details\",keywords);\n                this.setState({keywords: keywords ,redirect: true})\n            }\n            console.log(keywords)\n        }\n    }\n\n    homeButton = () => {\n        this.props.history.push('/inside/') \n    }\n    \n\n    render(){\n        if (this.state.redirect) {\n            return <Redirect to={{pathname: '/inside/articles',state: {keywords:this.state.keywords}}}/>;\n        }\n\n        return(\n            <div>\n            <Header\n                handleKeyPress={this.handleKeyPress}\n                homeButton={this.homeButton}\n                singlePage={false}\n                handleSearchWord={this.handleSearchWord}\n                searchButtonClicked={this.searchButtonClicked}\n                value={this.state.keywords}\n            />\n            <DetailsPage question={this.state.question} answer={this.state.answer}/>\n        </div> \n        )}\n}","import React from 'react';\nimport './App.css';\nimport Home from './containers/Home';\nimport ResultsData from './containers/Results';\nimport Details from './containers/Details';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/inside/\" exact component={Home}/>\n          <Route path=\"/inside/articles\" component={ResultsData}/>\n          <Route path=\"/inside/details\" component={Details}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}